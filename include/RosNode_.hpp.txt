#ifndef _ROS_NODE_HPP_
#define _ROS_NODE_HPP_

void ros_init();
void ros_loop();
void Publish_Distance(float dist_left, float dist_right);


#define RCCHECK(fn)              \
  {                              \
    rcl_ret_t temp_rc = fn;      \
    if ((temp_rc != RCL_RET_OK)) \
    {                            \
    }                            \
  }

#define RCSOFTCHECK(fn) { \
    rcl_ret_t temp_rc = fn;\
 if((temp_rc != RCL_RET_OK)){}}


#define EXECUTE_EVERY_N_MS(MS, X)      \
                                       \
  do                                   \
  {                                    \
    static volatile int64_t init = -1; \
    if (init == -1)                    \
    {                                  \
      init = uxr_millis();             \
    }                                  \
    if (uxr_millis() - init > MS)      \
    {                                  \
      X;                               \
      init = uxr_millis();             \
    }                                  \
  } while (0);

enum states
{
  WAITING_AGENT,
  AGENT_AVAILABLE,
  AGENT_CONNECTED,
  AGENT_DISCONNECTED
} ;
extern float cmd_linear_x ;
extern float cmd_angular_z ;

#endif // _ROS_NODE_HPP_